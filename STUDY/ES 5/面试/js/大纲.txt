1: 判断一个变量是一个 String 类型
    typeof(var) === 'string'
    var.constructor === String

2: 去除字符串空格
    str.replace(/\s*/g, '') 所有空格
    str.trim() 去除左右空格
    $.trim(str) 去除左右空格

3: 获取浏览器中的查询字符串
    function param_to_dict (href) {
        var args = href.split('?')
        if (args[0] == href) {
            return ''
        }
        var param_list = args[1].split('&')
        var ret = {}
        for (var i= 0; i< param_list.length; i++ ) {
            var params = param_list[i].split('=')
            ret[params[0]] = params[1]
        }
        return ret 
    }
    // 若查询字符串为 search=VcrT
    var param_dict = param_to_dict(href)
    console.info(param_dict['search'])

4: js 中操作字符串的函数
    concat() 将多个字符串组合成一个新字符串
    indexOf() 返回字符串中一个字串第一处出现的索引。没有匹配项返回-1
    charAt() 返回指定位置的字符
    lastIndexOf() 返回字符串中一个子串最后一处出现的索引，没有匹配项返回-1
    match() 检查一个字符串是否匹配一个正则表达式
    substr() 切割字符串，从第几个开始，切割多少长度
    substring() 返回一个字符子串，传入起始位置与结束位置
    slice() 提取字符串的一部分，并返回一个新字符串
    replace() 根据正则匹配找到字符串，然后用新字符串代替它
    search() 根据正则表达式查找，成功则返回索引，没有匹配项返回-1
    split() 分割字符串，返回数组
    length 字符串的长度
    toLowerCase() 整行字符串转小写
    toUpperCase() 整行字符串转大写

5: 如何添加、移除、移动、复制、创建、查找
    创建:
        craeteDocumentFragment() 创建一个dom片段
        createElement() 创建一个具体的元素
        createTextNode() 创建一个文本节点
    添加、移除、替换、插入:
        appendChild()
        removeChild()
        replaceChild()
        insertBefore()
    查找:
        getElementByTagName()
        getElementByName()
        getElementById()

6: typeof 与 instanceof
    typeof 只能返回 number, boolean, string, function, object, undefined
    如果遇到 Array 与 Null, 只返回 object

    instanceof 返回该对象的实例 var a = new test() a instanceof test => true 

7: 闭包
    当一个函数的返回值是另外一个函数，而返回的那个函数如果调用了其父函数的内部的其它变量，
    如果返回的这个函数在外部被执行，就产生了闭包
    滥用闭包会造成内存泄漏，闭包的变量都会在内存中保存，内存消耗很大

8: 什么是跨域？跨域请求资源的方法有哪些？
    由于浏览器的同源策略，当
    网络协议不同，
    端口不同，
    域名不同，
    子域名不同，
    域名随之对应的ip不同时

9: 跨域解决方式
    porxy代理，通过nginx代理
    CORS 后台处理，添加允许跨域的相关操作
    jsonp 通过动态插入一个script标签
